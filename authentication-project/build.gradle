plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.6'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.sonarqube' version '3.0'
}

group = 'recamp'
version = '1.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.springframework', name: 'spring-aop', version: '6.1.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.2.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.2.0'
    implementation 'net.nurigo:sdk:4.2.7'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '3.2.0'
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter', version: '1.2.5.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-storage', version: '1.2.5.RELEASE'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

task copyPrivate(type: Copy) {
    copy {
        from './recamp-private-project-env'
        include "*.yml", "*.properties"
        into 'src/main/resources'
    }
}

subprojects {
    apply plugin: 'org.sonarqube'
    apply plugin: 'jacoco'

    test {
        useJUnitPlatform();
        finalizedBy 'jacocoTestReport'
    }

    sonarqube {
        properties {
            property 'sonar.host.url', 'http://34.22.84.41:9000'
            property 'sonar.login', 'squ_1af00869e314e33148d2500d3168f961fca9c91d'
            property 'sonar.sources', 'src'
            property 'sonar.language', 'java'
            property 'sonar.projectVersion', '1.1.0-SNAPSHOT'
            property 'sonar.sourceEncoding', 'UTF-8'
            property 'sonar.coverage.jacoco.xmlReportPaths', '${buildDir}/reports/jacoco/test/jacocoTestReport.xml'
            property 'sonar.java.binaries', '${buildDir}/classes'
            property 'sonar.test.inclusions', '**/*Test.java'
            property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/**'
        }
    }

    jacoco {
        toolVersion = '0.8.10'
    }

    jacocoTestReport {
        reports {
            html.enabled true
            csv.enabled true
            xml.enabled true
        }
    }
}